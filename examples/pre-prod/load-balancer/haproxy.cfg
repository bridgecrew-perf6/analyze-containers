global
  log stdout format raw daemon debug

defaults
    log global 
    mode http
    option httplog
    option log-health-checks
 
    timeout connect 5000
    timeout client  5000
    timeout server  50000

    # Timeouts for long-lived connections (web-sockets)
    timeout client-fin 30s
    timeout tunnel  200s

resolvers docker_resolver
    nameserver dns 127.0.0.11:53

frontend https
    bind *:9046 ssl crt /tmp/i2acerts/i2Analyze.pem
    default_backend liberty
    stats enable
    stats hide-version  # Hide HAProxy version
    stats realm Haproxy\ Statistics  # Title text for popup window
    stats uri /haproxy_stats  # Stats URI
    stats refresh 5s 

backend liberty
    balance roundrobin
    cookie SRV insert indirect nocache

    option forwardfor
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }
    http-request set-header X-Forwarded-Host %[req.hdr(Host)]

    #TODO: Correctly implement header behavior. Test bellow
    #acl h_xfport_exists req.hdr(X-Forwarded-Port) -m found
    #http-request add-header X-Forwarded-Port %[dst_port] unless h_xfport_exists
    #acl h_xfproto_exists req.hdr(X-Forwarded-Proto) -m found
    #http-request add-header X-Forwarded-Proto https unless h_xfproto_exists
    #acl h_xfhost_exists req.hdr(X-Forwarded-Host) -m found
    #http-request set-header X-Forwarded-Host %[req.hdr(Host)] unless h_xfhost_exists

    # Set the healthcheck
    option httpchk HEAD /opal/api/v1/health/live
    http-check expect status 200

    server liberty1 "${LIBERTY1_LB_STANZA}" "${LIBERTY_SSL}" verify none check init-addr last,libc resolvers docker_resolver resolve-prefer ipv4 cookie s1 rise 1 fall 1
    server liberty2 "${LIBERTY2_LB_STANZA}" "${LIBERTY_SSL}" verify none check init-addr last,libc resolvers docker_resolver resolve-prefer ipv4 cookie s2 rise 1 fall 1
